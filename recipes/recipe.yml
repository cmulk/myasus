---
# yaml-language-server: $schema=https://schema.blue-build.org/recipe-v1.json
# image will be published to ghcr.io/<user>/<name>
name: myasus
# description will be included in the image's metadata
description: This is my image for Asus ImagineBook.

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/bluefin-dx
image-version: latest # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - source: system
        destination: / # copies files/system/* (* means everything inside it) into your image's root folder /

  - type: rpm-ostree
    repos:
      - https://negativo17.org/repos/fedora-multimedia.repo
    install:
      - micro
      # install horizon client
      - https://download3.omnissa.com/software/CART25FQ4_LIN64_RPMPkg_2412/Omnissa-Horizon-Client-2412-8.14.0-12437214089.x64.rpm
      - dkms-evdi
    # remove:
    #   # example: removing firefox (in favor of the flatpak)
    #   # "firefox" is the main package, "firefox-langpacks" is a dependency
    #   - firefox
    #   - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  # - type: akmods
  #   base: coreos-stable # if not specified, classic "main" base is used by default
  #   install:
  #     - evdi

  - type: containerfile
    containerfiles:
      - custom-modules 

  - type: script
    snippets:
      # make links for smartcard auth in horizon client
      - mkdir -p /usr/lib/omnissa/horizon/pkcs11/
      - ln -s /usr/lib64/pkcs11/opensc-pkcs11.so /usr/lib/omnissa/horizon/pkcs11/libopenscpkcs11.so
      # make sure systemd-homed works for login
      - authselect enable-feature with-systemd-homed
      # fix ssh login for systemd-homed
      # generated using grep sshd /var/log/audit/audit.log | audit2allow -M ssh_systemd_homed
      - semodule --install /etc/selinux/ssh_systemd_homed.pp
    scripts:
      - unpin_flatpak_runtimes.sh

  - type: fonts
    fonts:
      nerd-fonts:
        - FiraCode

  # - type: default-flatpaks
  #   notify: true # Send notification after install/uninstall is finished (true/false)
  #   system:
  #     # If no repo information is specified, Flathub will be used by default
  #     install:
  #       - org.mozilla.firefox
  #       - org.gnome.Loupe
  #     remove:
  #       - org.gnome.eog
  #   user: {} # Also add Flathub user repo, but no user packages

  - type: signing # this sets up the proper policy & signing files for signed images to work fully

